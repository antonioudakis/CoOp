package softeng.coop.ui.composites;

import softeng.coop.dataaccess.Student;
import softeng.coop.ui.ICoopContext;
import softeng.coop.ui.presenters.StudentCardPresenter;
import softeng.coop.ui.viewdefinitions.IOkCancelView;
import softeng.coop.ui.viewdefinitions.IStudentCardView;
import softeng.coop.ui.viewdefinitions.viewmodels.OkCancelViewModel;
import softeng.ui.vaadin.mvp.IView;
import softeng.ui.vaadin.mvp.Presenter;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.VerticalLayout;

public class StudentCardComponent 
	extends CoopComponent<BeanItem<Student> >
	implements IStudentCardView
{
	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private OkCancelComponent okCancelComponent;

	@AutoGenerated
	private HorizontalLayout horizontalLayout;

	@AutoGenerated
	private VerticalLayout rightVerticalLayout;

	@AutoGenerated
	private AdditionalStudentDataComponent additionalStudentDataComponent;

	@AutoGenerated
	private VerticalLayout leftVerticalLayout;

	@AutoGenerated
	private PersonDataComponent personDataComponent;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1L;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public StudentCardComponent()
	{
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
	}

	@Override
	public void dataBind()
	{
		this.personDataComponent.setModel(this.getModel());
		this.additionalStudentDataComponent.setModel(this.getModel());
		
		this.personDataComponent.dataBind();
		this.additionalStudentDataComponent.dataBind();
		
		this.okCancelComponent.setModel(OkCancelViewModel.Save);
		this.okCancelComponent.dataBind();
	}

	@Override
	protected void setupUI()
	{
		super.setupUI();
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout()
	{
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout
		horizontalLayout = buildHorizontalLayout();
		mainLayout.addComponent(horizontalLayout);
		mainLayout.setExpandRatio(horizontalLayout, 1.0f);
		
		// okCancelComponent
		okCancelComponent = new OkCancelComponent();
		okCancelComponent.setImmediate(false);
		okCancelComponent.setWidth("-1px");
		okCancelComponent.setHeight("-1px");
		mainLayout.addComponent(okCancelComponent);
		mainLayout.setComponentAlignment(okCancelComponent, new Alignment(10));
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout()
	{
		// common part: create layout
		horizontalLayout = new HorizontalLayout();
		horizontalLayout.setImmediate(false);
		horizontalLayout.setWidth("100.0%");
		horizontalLayout.setHeight("-1px");
		horizontalLayout.setMargin(false);
		horizontalLayout.setSpacing(true);
		
		// leftVerticalLayout
		leftVerticalLayout = buildLeftVerticalLayout();
		horizontalLayout.addComponent(leftVerticalLayout);
		horizontalLayout.setExpandRatio(leftVerticalLayout, 1.0f);
		
		// rightVerticalLayout
		rightVerticalLayout = buildRightVerticalLayout();
		horizontalLayout.addComponent(rightVerticalLayout);
		horizontalLayout.setExpandRatio(rightVerticalLayout, 1.0f);
		
		return horizontalLayout;
	}

	@AutoGenerated
	private VerticalLayout buildLeftVerticalLayout()
	{
		// common part: create layout
		leftVerticalLayout = new VerticalLayout();
		leftVerticalLayout.setImmediate(false);
		leftVerticalLayout.setWidth("100.0%");
		leftVerticalLayout.setHeight("-1px");
		leftVerticalLayout.setMargin(false);
		
		// personDataComponent
		personDataComponent = new PersonDataComponent();
		personDataComponent.setImmediate(false);
		personDataComponent.setWidth("100.0%");
		personDataComponent.setHeight("-1px");
		leftVerticalLayout.addComponent(personDataComponent);
		
		return leftVerticalLayout;
	}

	@AutoGenerated
	private VerticalLayout buildRightVerticalLayout()
	{
		// common part: create layout
		rightVerticalLayout = new VerticalLayout();
		rightVerticalLayout.setImmediate(false);
		rightVerticalLayout.setWidth("100.0%");
		rightVerticalLayout.setHeight("-1px");
		rightVerticalLayout.setMargin(false);
		
		// additionalStudentDataComponent
		additionalStudentDataComponent = new AdditionalStudentDataComponent();
		additionalStudentDataComponent.setImmediate(false);
		additionalStudentDataComponent.setWidth("100.0%");
		additionalStudentDataComponent.setHeight("-1px");
		rightVerticalLayout.addComponent(additionalStudentDataComponent);
		
		return rightVerticalLayout;
	}

	@Override
	protected Presenter<BeanItem<Student>, ICoopContext, ? extends IView<BeanItem<Student>, ICoopContext>> supplyPresenter()
	{
		return new StudentCardPresenter(this);
	}

	@Override
	public IOkCancelView getOkCancelView()
	{
		return this.okCancelComponent;
	}

	@Override
	public boolean isDataValid()
	{
		return this.additionalStudentDataComponent.isDataValid() 
			&& this.personDataComponent.isDataValid();
	}

	@Override
	public void commitChangesToModel()
	{
		personDataComponent.commitChangesToModel();
		additionalStudentDataComponent.commitChangesToModel();
	}

	@Override
	public void discardChanges()
	{
		personDataComponent.discardChanges();
		additionalStudentDataComponent.discardChanges();
	}

}
