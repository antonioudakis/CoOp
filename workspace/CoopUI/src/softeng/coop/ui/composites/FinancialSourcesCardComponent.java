package softeng.coop.ui.composites;

import java.util.Collection;
import java.util.Locale;

import softeng.coop.dataaccess.FinancialSource;
import softeng.coop.ui.ICoopContext;
import softeng.coop.ui.presenters.FinancialSourcesCardPresenter;
import softeng.coop.ui.viewdefinitions.IFinancialSourcesCardView;
import softeng.coop.ui.viewdefinitions.IOkCancelView;
import softeng.coop.ui.viewdefinitions.viewmodels.OkCancelViewModel;
import softeng.ui.vaadin.mvp.IListener;
import softeng.ui.vaadin.mvp.IView;
import softeng.ui.vaadin.mvp.ModelEvent;
import softeng.ui.vaadin.mvp.Presenter;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.VerticalLayout;

public class FinancialSourcesCardComponent 
extends CoopComponent<Collection<FinancialSource>>
implements IFinancialSourcesCardView
{
	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private OkCancelComponent okCancelComponent;

	@AutoGenerated
	private HorizontalLayout horizontalLayout;

	@AutoGenerated
	private FinancialSourceDataComponent dataComponent;

	@AutoGenerated
	private FinancialSourcesTableComponent tableComponent;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1L;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public FinancialSourcesCardComponent()
	{
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		tableComponent.addSelectedChangeListener(new IListener<ModelEvent<FinancialSource>>()
		{
			@Override
			public void onEvent(ModelEvent<FinancialSource> event)
			{
				onSelectedFinancialSourceChanged(tableComponent.getSelectedItem());
			}
		});
	}

	protected void onSelectedFinancialSourceChanged(BeanItem<FinancialSource> selectedItem)
	{
		dataComponent.setModel(selectedItem);
		dataComponent.dataBind();
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout()
	{
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// horizontalLayout
		horizontalLayout = buildHorizontalLayout();
		mainLayout.addComponent(horizontalLayout);
		
		// okCancelComponent
		okCancelComponent = new OkCancelComponent();
		okCancelComponent.setImmediate(false);
		okCancelComponent.setWidth("-1px");
		okCancelComponent.setHeight("-1px");
		mainLayout.addComponent(okCancelComponent);
		mainLayout.setComponentAlignment(okCancelComponent, new Alignment(10));
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout()
	{
		// common part: create layout
		horizontalLayout = new HorizontalLayout();
		horizontalLayout.setImmediate(false);
		horizontalLayout.setWidth("100.0%");
		horizontalLayout.setHeight("-1px");
		horizontalLayout.setMargin(false);
		horizontalLayout.setSpacing(true);
		
		// tableComponent
		tableComponent = new FinancialSourcesTableComponent();
		tableComponent.setImmediate(false);
		tableComponent.setWidth("100.0%");
		tableComponent.setHeight("-1px");
		horizontalLayout.addComponent(tableComponent);
		horizontalLayout.setExpandRatio(tableComponent, 0.3f);
		
		// dataComponent
		dataComponent = new FinancialSourceDataComponent();
		dataComponent.setImmediate(false);
		dataComponent.setWidth("100.0%");
		dataComponent.setHeight("-1px");
		horizontalLayout.addComponent(dataComponent);
		horizontalLayout.setExpandRatio(dataComponent, 0.7f);
		
		return horizontalLayout;
	}

	@Override
	public boolean isDataValid()
	{
		return dataComponent.isDataValid();
	}

	@Override
	public void discardChanges()
	{
		dataComponent.discardChanges();
	}

	@Override
	public void commitChangesToModel()
	{
		dataComponent.commitChangesToModel();
	}

	@Override
	public IOkCancelView getOkCancelView()
	{
		return okCancelComponent;
	}

	@Override
	public FinancialSource getSelectedFinancialSource()
	{
		return tableComponent.getSelectedValue();
	}

	@Override
	public void dataBind()
	{
		FinancialSource selectedFinancialSource = tableComponent.getSelectedValue();
		
		tableComponent.setModel(getModel());
		
		tableComponent.setSelectedValue(selectedFinancialSource);
	}

	@Override
	protected Presenter<Collection<FinancialSource>, ICoopContext, ? extends IView<Collection<FinancialSource>, ICoopContext>> supplyPresenter()
	{
		return new FinancialSourcesCardPresenter(this);
	}

	@Override
	protected void setupLocalizedCaptions(Locale locale)
	{
		super.setupLocalizedCaptions(locale);
		
		tableComponent.setCaption(getLocalizedString("TABLE_CAPTION"));
	}
	
	@Override
	public void setupUI()
	{
		super.setupUI();
		
		tableComponent.setImmediate(true);
		tableComponent.setEditVisible(false);
		
		okCancelComponent.setModel(OkCancelViewModel.Save);
	}

}
