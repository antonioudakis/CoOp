package softeng.coop.ui.composites;

import java.util.Locale;

import softeng.coop.dataaccess.Department;
import softeng.coop.dataaccess.Lesson;
import softeng.coop.ui.ICoopContext;
import softeng.coop.ui.data.MultilingualValidationForm;
import softeng.coop.ui.presenters.LessonsCardPresenter;
import softeng.coop.ui.viewdefinitions.ILessonsCardView;
import softeng.coop.ui.viewdefinitions.IOkCancelView;
import softeng.coop.ui.viewdefinitions.viewmodels.OkCancelViewModel;
import softeng.ui.vaadin.mvp.IListener;
import softeng.ui.vaadin.mvp.ModelEvent;
import softeng.ui.vaadin.mvp.Presenter;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Component;
import com.vaadin.ui.Field;
import com.vaadin.ui.FormFieldFactory;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class LessonsCardComponent 
extends CoopComponent<BeanItem<Department>>
implements ILessonsCardView
{
	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private OkCancelComponent okCancelComponent;

	@AutoGenerated
	private HorizontalLayout horizontalLayout;

	@AutoGenerated
	private LessonForm lessonForm;

	@AutoGenerated
	private LessonsTableComponent lessonsTableComponent;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1L;
	
	private TextField nameTextField;
	
	public static class LessonForm 
		extends MultilingualValidationForm<Lesson>
	{
		private static final long serialVersionUID = 1L;

		public LessonForm()
		{
			super(Lesson.class);
		}
	}

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public LessonsCardComponent()
	{
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@Override
	protected Presenter<BeanItem<Department>, ICoopContext, ? extends ILessonsCardView> supplyPresenter()
	{
		return new LessonsCardPresenter(this);
	}

	@Override
	public void dataBind()
	{
		Lesson previousSelectedLesson = this.lessonsTableComponent.getSelectedValue();
		
		if (this.getModel() != null)
		{
			Department department = this.getModel().getBean();
			
			this.lessonsTableComponent.setParentModel(department);
			this.lessonsTableComponent.setModel(department.getLessons());
		}
		else
		{
			this.lessonsTableComponent.setParentModel(null);
			this.lessonsTableComponent.setModel(null);
		}
		
		this.lessonsTableComponent.dataBind();
		
		this.lessonsTableComponent.setSelectedValue(previousSelectedLesson);
	}

	@SuppressWarnings("serial")
	@Override
	protected void setupUI()
	{
		super.setupUI();
		
		this.lessonsTableComponent.setWriteThrough(true);
		this.lessonsTableComponent.setImmediate(true);
		this.lessonsTableComponent.setEditVisible(false);
		
		this.lessonsTableComponent.addSelectedChangeListener(new IListener<ModelEvent<Lesson>>()
		{
			@Override
			public void onEvent(ModelEvent<Lesson> event)
			{
				onSelectedLessonChanged();
			}
		});
		
		this.lessonForm.setFormFieldFactory(new FormFieldFactory()
		{
			@Override
			public Field createField(Item item, Object propertyId, Component uiContext)
			{
				if (propertyId.equals("name"))
				{
					nameTextField = new TextField(getLocalizedString("LESSON_NAME_CAPTION"));
					nameTextField.setDescription(getContext().getLocalizedString("CARD_FIELD_IS_MULTILINGUAL_DESCRIPTION"));
					nameTextField.setWidth("100%");
					
					return nameTextField;
				}
				
				return null;
			}
		});
		
		this.lessonForm.setImmediate(true);
		this.lessonForm.setWriteThrough(false);
		
		this.okCancelComponent.setModel(OkCancelViewModel.Save);
		this.okCancelComponent.dataBind();
	}

	private void onSelectedLessonChanged()
	{
		this.lessonForm.setItemDataSource(
				this.lessonsTableComponent.getSelectedItem());
	}

	@Override
	protected void setupLocalizedCaptions(Locale locale)
	{
		super.setupLocalizedCaptions(locale);
		
		lessonsTableComponent.setCaption(getLocalizedString("LESSONS_TABLE_CAPTION"));
		
		lessonForm.setCaption(getLocalizedString("LESSON_FORM_CAPTION"));
		
		if (nameTextField != null)
		{
			nameTextField.setCaption(getLocalizedString("LESSON_NAME_CAPTION"));
			nameTextField.setDescription(getContext().getLocalizedString("CARD_FIELD_IS_MULTILINGUAL_DESCRIPTION"));
		}
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout()
	{
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// horizontalLayout
		horizontalLayout = buildHorizontalLayout();
		mainLayout.addComponent(horizontalLayout);
		
		// okCancelComponent
		okCancelComponent = new OkCancelComponent();
		okCancelComponent.setImmediate(false);
		okCancelComponent.setWidth("-1px");
		okCancelComponent.setHeight("-1px");
		mainLayout.addComponent(okCancelComponent);
		mainLayout.setComponentAlignment(okCancelComponent, new Alignment(10));
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout()
	{
		// common part: create layout
		horizontalLayout = new HorizontalLayout();
		horizontalLayout.setImmediate(false);
		horizontalLayout.setWidth("100.0%");
		horizontalLayout.setHeight("-1px");
		horizontalLayout.setMargin(false);
		horizontalLayout.setSpacing(true);
		
		// lessonsTableComponent
		lessonsTableComponent = new LessonsTableComponent();
		lessonsTableComponent.setImmediate(false);
		lessonsTableComponent.setWidth("100.0%");
		lessonsTableComponent.setHeight("-1px");
		horizontalLayout.addComponent(lessonsTableComponent);
		horizontalLayout.setExpandRatio(lessonsTableComponent, 0.3f);
		
		// lessonForm
		lessonForm = new LessonForm();
		lessonForm.setImmediate(false);
		lessonForm.setWidth("100.0%");
		lessonForm.setHeight("-1px");
		horizontalLayout.addComponent(lessonForm);
		horizontalLayout.setExpandRatio(lessonForm, 0.7f);
		
		return horizontalLayout;
	}

	@Override
	public boolean isDataValid()
	{
		return this.lessonForm.isValid();
	}

	@Override
	public void discardChanges()
	{
		this.lessonForm.discard();
	}

	@Override
	public void commitChangesToModel()
	{
		if (this.lessonForm.isValid()) this.lessonForm.commit();
	}

	@Override
	public IOkCancelView getOkCancelView()
	{
		return this.okCancelComponent;
	}

	@Override
	public Lesson getSelectedLesson()
	{
		return this.lessonsTableComponent.getSelectedValue();
	}
}
