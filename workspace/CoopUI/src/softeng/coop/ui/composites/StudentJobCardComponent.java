package softeng.coop.ui.composites;

import java.util.Locale;

import softeng.coop.dataaccess.CoOp;
import softeng.coop.dataaccess.Group;
import softeng.coop.dataaccess.Job;
import softeng.coop.dataaccess.Registration;
import softeng.coop.ui.ICoopContext;
import softeng.coop.ui.data.DataItem;
import softeng.coop.ui.presenters.StudentRegistrationCardPresenter;
import softeng.coop.ui.viewdefinitions.ICardFormView;
import softeng.coop.ui.viewdefinitions.IOkCancelView;
import softeng.coop.ui.viewdefinitions.viewmodels.OkCancelViewModel;
import softeng.ui.vaadin.mvp.IView;
import softeng.ui.vaadin.mvp.Presenter;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class StudentJobCardComponent 
extends CoopComponent<BeanItem<Registration>>
implements ICardFormView<BeanItem<Registration>>
{

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private OkCancelComponent okCancelComponent;
	@AutoGenerated
	private HorizontalLayout horizontalLayout;
	@AutoGenerated
	private VerticalLayout reportsAndEvaluationVerticalLayout;
	@AutoGenerated
	private EvaluationComponent evaluationComponent;
	@AutoGenerated
	private VerticalLayout reportsVerticalLayout;
	@AutoGenerated
	private GroupReportsComponent groupReportsComponent;
	@AutoGenerated
	private RegistrationReportsComponent registrationReportsComponent;
	@AutoGenerated
	private VerticalLayout jobVerticalLayout;
	@AutoGenerated
	private JobComponent jobComponent;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public StudentJobCardComponent()
	{
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		
		jobComponent.setReadOnly(true);
		
	}

	@Override
	protected Presenter<BeanItem<Registration>, ICoopContext, ? extends IView<BeanItem<Registration>, ICoopContext>> supplyPresenter()
	{
		return new StudentRegistrationCardPresenter<ICardFormView<BeanItem<Registration>>>(this);
	}

	@Override
	public void dataBind()
	{
		BeanItem<Registration> registrationItem = getModel();
		
		BeanItem<Group> groupItem = null;
		
		DataItem<Job> jobItem = null;
		
		CoOp coop = null;
		
		if (registrationItem != null)
		{
			Registration registration = registrationItem.getBean();
			
			coop = registration.getCoop();
			
			Group group = registration.getGroup();
			
			groupItem = new BeanItem<Group>(group);
			
			if (group != null)
			{
				Job job = group.getJob();
				
				if (job != null)
				{
					jobItem = new DataItem<Job>(job, getContext().getSession().getBaseManager());
				}
			}
		}
		
		jobComponent.setModel(jobItem);
		jobComponent.dataBind();
		
		if (coop != null)
		{
			if (coop.isGroupCoOp() && coop.isHasGroupGrade())
			{
				groupReportsComponent.setModel(groupItem);
				groupReportsComponent.setReadOnly(!coop.isActive());
				
				registrationReportsComponent.setModel(null);
			}
			else
			{
				groupReportsComponent.setModel(null);
				
				registrationReportsComponent.setModel(registrationItem);
				registrationReportsComponent.setReadOnly(!coop.isActive());
			}
			
			evaluationComponent.setReadOnly(!coop.isActive());
			
			okCancelComponent.setReadOnly(!coop.isActive());
			okCancelComponent.setVisible(coop.isActive());
		}
		
		groupReportsComponent.dataBind();
		
		registrationReportsComponent.dataBind();
		
		evaluationComponent.setModel(registrationItem);
		evaluationComponent.dataBind();
	}

	@Override
	public boolean isDataValid()
	{
		return 
			registrationReportsComponent.isDataValid() 
			&& groupReportsComponent.isDataValid()
			&& evaluationComponent.isDataValid();
	}

	@Override
	public void discardChanges()
	{
		registrationReportsComponent.discardChanges();
		groupReportsComponent.discardChanges();
		evaluationComponent.discardChanges();
	}

	@Override
	public void commitChangesToModel()
	{
		registrationReportsComponent.commitChangesToModel();
		groupReportsComponent.commitChangesToModel();
		evaluationComponent.commitChangesToModel();
	}

	@Override
	public IOkCancelView getOkCancelView()
	{
		return okCancelComponent;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout()
	{
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// horizontalLayout
		horizontalLayout = buildHorizontalLayout();
		mainLayout.addComponent(horizontalLayout);
		
		// okCancelComponent
		okCancelComponent = new OkCancelComponent();
		okCancelComponent.setImmediate(false);
		okCancelComponent.setWidth("-1px");
		okCancelComponent.setHeight("-1px");
		mainLayout.addComponent(okCancelComponent);
		mainLayout.setComponentAlignment(okCancelComponent, new Alignment(10));
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout()
	{
		// common part: create layout
		horizontalLayout = new HorizontalLayout();
		horizontalLayout.setImmediate(false);
		horizontalLayout.setWidth("100.0%");
		horizontalLayout.setHeight("-1px");
		horizontalLayout.setMargin(false);
		horizontalLayout.setSpacing(true);
		
		// jobVerticalLayout
		jobVerticalLayout = buildJobVerticalLayout();
		horizontalLayout.addComponent(jobVerticalLayout);
		horizontalLayout.setExpandRatio(jobVerticalLayout, 0.5f);
		
		// reportsAndEvaluationVerticalLayout
		reportsAndEvaluationVerticalLayout = buildReportsAndEvaluationVerticalLayout();
		horizontalLayout.addComponent(reportsAndEvaluationVerticalLayout);
		horizontalLayout.setExpandRatio(reportsAndEvaluationVerticalLayout, 0.5f);
		
		return horizontalLayout;
	}

	@AutoGenerated
	private VerticalLayout buildJobVerticalLayout()
	{
		// common part: create layout
		jobVerticalLayout = new VerticalLayout();
		jobVerticalLayout.setImmediate(false);
		jobVerticalLayout.setWidth("100.0%");
		jobVerticalLayout.setHeight("-1px");
		jobVerticalLayout.setMargin(false);
		jobVerticalLayout.setSpacing(true);
		
		// jobComponent
		jobComponent = new JobComponent();
		jobComponent.setImmediate(false);
		jobComponent.setWidth("100.0%");
		jobComponent.setHeight("-1px");
		jobVerticalLayout.addComponent(jobComponent);
		
		return jobVerticalLayout;
	}

	@AutoGenerated
	private VerticalLayout buildReportsAndEvaluationVerticalLayout()
	{
		// common part: create layout
		reportsAndEvaluationVerticalLayout = new VerticalLayout();
		reportsAndEvaluationVerticalLayout.setImmediate(false);
		reportsAndEvaluationVerticalLayout.setWidth("100.0%");
		reportsAndEvaluationVerticalLayout.setHeight("-1px");
		reportsAndEvaluationVerticalLayout.setMargin(false);
		reportsAndEvaluationVerticalLayout.setSpacing(true);
		
		// reportsVerticalLayout
		reportsVerticalLayout = buildReportsVerticalLayout();
		reportsAndEvaluationVerticalLayout.addComponent(reportsVerticalLayout);
		
		// evaluationComponent
		evaluationComponent = new EvaluationComponent();
		evaluationComponent.setImmediate(false);
		evaluationComponent.setWidth("100.0%");
		evaluationComponent.setHeight("-1px");
		reportsAndEvaluationVerticalLayout.addComponent(evaluationComponent);
		
		return reportsAndEvaluationVerticalLayout;
	}

	@AutoGenerated
	private VerticalLayout buildReportsVerticalLayout()
	{
		// common part: create layout
		reportsVerticalLayout = new VerticalLayout();
		reportsVerticalLayout.setImmediate(false);
		reportsVerticalLayout.setWidth("100.0%");
		reportsVerticalLayout.setHeight("-1px");
		reportsVerticalLayout.setMargin(false);
		
		// registrationReportsComponent
		registrationReportsComponent = new RegistrationReportsComponent();
		registrationReportsComponent.setImmediate(true);
		registrationReportsComponent.setWidth("100.0%");
		registrationReportsComponent.setHeight("-1px");
		reportsVerticalLayout.addComponent(registrationReportsComponent);
		
		// groupReportsComponent
		groupReportsComponent = new GroupReportsComponent();
		groupReportsComponent.setImmediate(true);
		groupReportsComponent.setWidth("100.0%");
		groupReportsComponent.setHeight("-1px");
		reportsVerticalLayout.addComponent(groupReportsComponent);
		
		return reportsVerticalLayout;
	}

	@Override
	protected void setupUI()
	{
		super.setupUI();
		
		okCancelComponent.setModel(OkCancelViewModel.Save);
		okCancelComponent.dataBind();
	}

	@Override
	protected void setupLocalizedCaptions(Locale locale)
	{
		super.setupLocalizedCaptions(locale);
	}

}
